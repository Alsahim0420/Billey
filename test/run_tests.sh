#!/bin/bash

# Script para ejecutar todos los tests de My Finances App
# Autor: My Finances Team
# Fecha: $(date)

echo "üß™ Ejecutando tests para My Finances App"
echo "========================================"

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para mostrar resultados
show_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2 completado exitosamente${NC}"
    else
        echo -e "${RED}‚ùå $2 fall√≥${NC}"
        exit 1
    fi
}

# Funci√≥n para mostrar informaci√≥n
show_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# Funci√≥n para mostrar advertencia
show_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# Verificar que estamos en el directorio correcto
if [ ! -f "pubspec.yaml" ]; then
    echo -e "${RED}‚ùå Error: No se encontr√≥ pubspec.yaml. Ejecuta este script desde la ra√≠z del proyecto.${NC}"
    exit 1
fi

# Limpiar y obtener dependencias
show_info "Limpiando y obteniendo dependencias..."
flutter clean
flutter pub get
show_result $? "Limpieza y obtenci√≥n de dependencias"

# Ejecutar an√°lisis est√°tico
show_info "Ejecutando an√°lisis est√°tico..."
flutter analyze
show_result $? "An√°lisis est√°tico"

# Ejecutar tests unitarios
show_info "Ejecutando tests unitarios..."
flutter test test/unit/ --reporter=expanded
show_result $? "Tests unitarios"

# Ejecutar tests de widgets
show_info "Ejecutando tests de widgets..."
flutter test test/widget/ --reporter=expanded
show_result $? "Tests de widgets"

# Ejecutar test principal
show_info "Ejecutando test principal..."
flutter test test/widget_test.dart --reporter=expanded
show_result $? "Test principal"

# Ejecutar tests de integraci√≥n (si hay dispositivo conectado)
show_info "Verificando dispositivos para tests de integraci√≥n..."
if flutter devices | grep -q "connected"; then
    show_info "Ejecutando tests de integraci√≥n..."
    flutter test integration_test/ --reporter=expanded
    show_result $? "Tests de integraci√≥n"
else
    show_warning "No hay dispositivos conectados. Saltando tests de integraci√≥n."
fi

# Ejecutar tests con cobertura
show_info "Ejecutando tests con cobertura..."
flutter test --coverage --reporter=expanded
show_result $? "Tests con cobertura"

# Mostrar resumen
echo ""
echo "üéâ ¬°Todos los tests completados!"
echo "========================================"
echo -e "${GREEN}‚úÖ Tests unitarios: Completados${NC}"
echo -e "${GREEN}‚úÖ Tests de widgets: Completados${NC}"
echo -e "${GREEN}‚úÖ Test principal: Completado${NC}"
if flutter devices | grep -q "connected"; then
    echo -e "${GREEN}‚úÖ Tests de integraci√≥n: Completados${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Tests de integraci√≥n: Saltados (sin dispositivo)${NC}"
fi
echo -e "${GREEN}‚úÖ Tests con cobertura: Completados${NC}"
echo ""
echo -e "${BLUE}üìä Para ver el reporte de cobertura, ejecuta:${NC}"
echo "genhtml coverage/lcov.info -o coverage/html"
echo "open coverage/html/index.html"
echo ""
echo -e "${BLUE}üìù Para ejecutar tests espec√≠ficos:${NC}"
echo "flutter test test/unit/models/transaction_test.dart"
echo "flutter test test/widget/dashboard_screen_test.dart"
echo "flutter test integration_test/app_test.dart" 